[
    {
      "title": "Reverse a String",
      "category": "Strings, Algorithms",
      "complexity": "Easy"
    },
    {
      "title": "Linked List Cycle Detection",
      "category": "Data Structures, Algorithms",
      "complexity": "Easy"
    },
    {
        "title": "Roman to Integer",
        "category": "Algorithms",
        "complexity": "Easy"
      },
      {
        "title": "Add Binary",
        "category": "Bit Manipulation, Algorithms",
        "complexity": "Easy"
      },
      {
        "title": "Fibonacci Number",
        "category": "Recursion, Algorithms",
        "complexity": "Easy"
      },
      {
        "title": "Implement Stack using Queues",
        "category": "Data Structures",
        "complexity": "Easy"
      },
      {
        "title": "Combine Two Tables",
        "category": "Databases",
        "complexity": "Easy"
      },
      {
        "title": "Repeated DNA Sequences",
        "category": "Algorithms, Bit Manipulation",
        "complexity": "Medium"
      },
      {
        "title": "Course Schedule",
        "category": "Data Structures, Algorithms",
        "complexity": "Medium"
      },
      {
        "title": "LRU Cache Design",
        "category": "Data Structures",
        "complexity": "Medium"
      },
      {
        "title": "Longest Common Subsequence",
        "category": "Strings, Algorithms",
        "complexity": "Medium"
      },
      {
        "title": "Rotate Image",
        "category": "Arrays, Algorithms",
        "complexity": "Medium"
      },
      {
        "title": "Airplane Seat Assignment Probability",
        "category": "Brainteaser",
        "complexity": "Medium"
      },
      {
        "title": "Validate Binary Search Tree",
        "category": "Data Structures, Algorithms",
        "complexity": "Medium"
      },
      {
        "title": "Sliding Window Maximum",
        "category": "Arrays, Algorithms",
        "complexity": "Hard"
      },
      {
        "title": "N-Queen Problem",
        "category": "Algorithms",
        "complexity": "Hard"
      },
      {
        "title": "Serialize and Deserialize a Binary Tree",
        "category": "Data Structures, Algorithms",
        "complexity": "Hard"
      },
      {
        "title": "Wildcard Matching",
        "category": "Strings, Algorithms",
        "complexity": "Hard"
      },
      {
        "title": "Chalkboard XOR Game",
        "category": "Brainteaser",
        "complexity": "Hard"
      },
      {
        "title": "Trips and Users",
        "category": "Databases",
        "complexity": "Hard"
      }
  ]